---
# tasks file for grafana
- name: Create User Grafana
  user:
    name: grafana
    create_home: no
    shell: /bin/false

- name: Create directories for Grafana
  file:
    path: '/tmp/grafana'
    state: directory
    owner: grafana
    group: grafana

- name: Download Grafana deb
  get_url:
    url: 'https://dl.grafana.com/oss/release/grafana_{{ grafana_version }}_amd64.deb'
    dest: '/tmp/grafana'

- name: Install Grafana
  apt:
    deb: '/tmp/grafana/grafana_{{ grafana_version }}_amd64.deb'

- name: Dashboard setup config
  template:
    src: templates/provisioning/dashboards/dashboard.yml
    dest: /etc/grafana/provisioning/dashboards/dashboard.yml

- name: Datasources setup config
  template:
    src: templates/provisioning/datasources/datasource.yml
    dest: /etc/grafana/provisioning/datasources/datasource.yml

- name: Add dashboards dir
  file:
    path: /var/lib/grafana/dashboards
    recurse: yes
    state: directory

- name: Reload systemd
  command: systemctl daemon-reload

- name: Systemctl Grafana Start
  systemd:
    name: grafana-server
    state: started
    enabled: yes

- name: (dashboard sync) Register previously copied dashboards
  find:
    paths: "/var/lib/grafana/dashboards"
    hidden: true
    patterns:
        - "*.json"
  register: _dashboards_present
  when: grafana_provisioning_synced and grafana_provision_dashboards

- name: Import grafana dashboards
  copy:
    src: "{{ item }}"
    dest: "/var/lib/grafana/dashboards/{{ item | basename }}"
  with_fileglob:
    - "{{ grafana_dashboards_dir }}/*.json"
  register: _dashboards_copied
  when: grafana_provision_dashboards
  notify:
    - systemd reload


- name: (dashboard sync) Get dashboard lists
  set_fact:
    _dashboards_present_list: "{{ _dashboards_present | json_query('files[*].path') | default([]) }}"
    _dashboards_copied_list: "{{ _dashboards_copied | json_query('results[*].dest') | default([]) }}"
  when: grafana_provisioning_synced and grafana_provision_dashboards

- name: (dashboard sync) Remove dashbards not present on target machine
  file:
    path: "{{ item }}"
    state: absent
  with_items: "{{ _dashboards_present_list | difference( _dashboards_copied_list ) }}"
  when: grafana_provisioning_synced and grafana_provision_dashboards
  notify:
    - systemd reload
